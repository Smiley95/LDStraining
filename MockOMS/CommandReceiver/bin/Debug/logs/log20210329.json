{"Timestamp":"2021-03-29T13:36:45.9724635+01:00","Level":"Warning","MessageTemplate":"No token validator was configured; incoming message access tokens will not be validated","Properties":{"SourceContext":"Linedata.Foundation.Messaging.IdentityModel.TokenValidatorPipeline"}}
{"Timestamp":"2021-03-29T13:36:45.9796872+01:00","Level":"Warning","MessageTemplate":"No identity context accessor was configured; no identity context will be set","Properties":{"SourceContext":"Linedata.Foundation.Messaging.IdentityModel.TokenValidatorPipeline"}}
{"Timestamp":"2021-03-29T13:36:45.9799595+01:00","Level":"Warning","MessageTemplate":"No service credentials provider was configured; outgoing messages will not contain access tokens","Properties":{"SourceContext":"Linedata.Foundation.Messaging.IdentityModel.TokenProviderPipeline"}}
{"Timestamp":"2021-03-29T13:36:46.0834261+01:00","Level":"Information","MessageTemplate":"Starting service {name}...","Properties":{"name":"Command Receiver","SourceContext":"Linedata.Foundation.ServiceHosting.Microservice"}}
{"Timestamp":"2021-03-29T13:36:46.0895808+01:00","Level":"Information","MessageTemplate":"Opening command receiver server endpoint at {address}","Properties":{"address":"tcp://localhost:12333","SourceContext":"Linedata.Foundation.CommandReceiver.CommandReceiverService"}}
{"Timestamp":"2021-03-29T13:36:46.2093668+01:00","Level":"Information","MessageTemplate":"Command Receiver is listening at {address}","Properties":{"address":"tcp://localhost:12333","SourceContext":"Linedata.Foundation.CommandReceiver.CommandReceiverService"}}
{"Timestamp":"2021-03-29T13:36:46.2230597+01:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2021-03-29T13:36:46.2265354+01:00","Level":"Information","MessageTemplate":"Hosting environment: {envName}","Properties":{"envName":"Production","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2021-03-29T13:36:46.2268312+01:00","Level":"Information","MessageTemplate":"Content root path: {contentRoot}","Properties":{"contentRoot":"C:\\Users\\Etaieb\\Desktop\\Training\\MockOMS\\CommandReceiver\\bin\\Debug\\netcoreapp3.1","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2021-03-29T13:36:46.2308729+01:00","Level":"Information","MessageTemplate":"Application is shutting down...","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2021-03-29T13:36:51.2426375+01:00","Level":"Information","MessageTemplate":"Waiting for the host to be disposed. Ensure all 'IHost' instances are wrapped in 'using' blocks.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2021-03-29T13:37:25.4028552+01:00","Level":"Warning","MessageTemplate":"No token validator was configured; incoming message access tokens will not be validated","Properties":{"SourceContext":"Linedata.Foundation.Messaging.IdentityModel.TokenValidatorPipeline"}}
{"Timestamp":"2021-03-29T13:37:25.4095080+01:00","Level":"Warning","MessageTemplate":"No identity context accessor was configured; no identity context will be set","Properties":{"SourceContext":"Linedata.Foundation.Messaging.IdentityModel.TokenValidatorPipeline"}}
{"Timestamp":"2021-03-29T13:37:25.4097573+01:00","Level":"Warning","MessageTemplate":"No service credentials provider was configured; outgoing messages will not contain access tokens","Properties":{"SourceContext":"Linedata.Foundation.Messaging.IdentityModel.TokenProviderPipeline"}}
{"Timestamp":"2021-03-29T13:37:25.5024677+01:00","Level":"Information","MessageTemplate":"Starting service {name}...","Properties":{"name":"Command Receiver","SourceContext":"Linedata.Foundation.ServiceHosting.Microservice"}}
{"Timestamp":"2021-03-29T13:37:25.5082911+01:00","Level":"Information","MessageTemplate":"Opening command receiver server endpoint at {address}","Properties":{"address":"tcp://localhost:12333","SourceContext":"Linedata.Foundation.CommandReceiver.CommandReceiverService"}}
{"Timestamp":"2021-03-29T13:37:25.6341953+01:00","Level":"Information","MessageTemplate":"Command Receiver is listening at {address}","Properties":{"address":"tcp://localhost:12333","SourceContext":"Linedata.Foundation.CommandReceiver.CommandReceiverService"}}
{"Timestamp":"2021-03-29T13:37:25.6442914+01:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2021-03-29T13:37:25.6479154+01:00","Level":"Information","MessageTemplate":"Hosting environment: {envName}","Properties":{"envName":"Production","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2021-03-29T13:37:25.6481461+01:00","Level":"Information","MessageTemplate":"Content root path: {contentRoot}","Properties":{"contentRoot":"C:\\Users\\Etaieb\\Desktop\\Training\\MockOMS\\CommandReceiver\\bin\\Debug\\netcoreapp3.1","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2021-03-29T13:37:25.6537302+01:00","Level":"Information","MessageTemplate":"Application is shutting down...","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2021-03-29T13:37:30.6610886+01:00","Level":"Information","MessageTemplate":"Waiting for the host to be disposed. Ensure all 'IHost' instances are wrapped in 'using' blocks.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2021-03-29T13:40:55.8274883+01:00","Level":"Warning","MessageTemplate":"No token validator was configured; incoming message access tokens will not be validated","Properties":{"SourceContext":"Linedata.Foundation.Messaging.IdentityModel.TokenValidatorPipeline"}}
{"Timestamp":"2021-03-29T13:40:55.8373475+01:00","Level":"Warning","MessageTemplate":"No identity context accessor was configured; no identity context will be set","Properties":{"SourceContext":"Linedata.Foundation.Messaging.IdentityModel.TokenValidatorPipeline"}}
{"Timestamp":"2021-03-29T13:40:55.8376168+01:00","Level":"Warning","MessageTemplate":"No service credentials provider was configured; outgoing messages will not contain access tokens","Properties":{"SourceContext":"Linedata.Foundation.Messaging.IdentityModel.TokenProviderPipeline"}}
{"Timestamp":"2021-03-29T13:40:55.9294183+01:00","Level":"Information","MessageTemplate":"Starting service {name}...","Properties":{"name":"Command Receiver","SourceContext":"Linedata.Foundation.ServiceHosting.Microservice"}}
{"Timestamp":"2021-03-29T13:40:55.9358406+01:00","Level":"Information","MessageTemplate":"Opening command receiver server endpoint at {address}","Properties":{"address":"tcp://localhost:12333","SourceContext":"Linedata.Foundation.CommandReceiver.CommandReceiverService"}}
{"Timestamp":"2021-03-29T13:40:56.0631423+01:00","Level":"Information","MessageTemplate":"Command Receiver is listening at {address}","Properties":{"address":"tcp://localhost:12333","SourceContext":"Linedata.Foundation.CommandReceiver.CommandReceiverService"}}
{"Timestamp":"2021-03-29T13:40:56.0748088+01:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2021-03-29T13:40:56.0782661+01:00","Level":"Information","MessageTemplate":"Hosting environment: {envName}","Properties":{"envName":"Production","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2021-03-29T13:40:56.0785356+01:00","Level":"Information","MessageTemplate":"Content root path: {contentRoot}","Properties":{"contentRoot":"C:\\Users\\Etaieb\\Desktop\\Training\\MockOMS\\CommandReceiver\\bin\\Debug\\netcoreapp3.1","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2021-03-29T13:40:56.0828473+01:00","Level":"Information","MessageTemplate":"Application is shutting down...","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2021-03-29T13:41:01.0893701+01:00","Level":"Information","MessageTemplate":"Waiting for the host to be disposed. Ensure all 'IHost' instances are wrapped in 'using' blocks.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2021-03-29T13:49:28.7264753+01:00","Level":"Warning","MessageTemplate":"No token validator was configured; incoming message access tokens will not be validated","Properties":{"SourceContext":"Linedata.Foundation.Messaging.IdentityModel.TokenValidatorPipeline"}}
{"Timestamp":"2021-03-29T13:49:28.7343810+01:00","Level":"Warning","MessageTemplate":"No identity context accessor was configured; no identity context will be set","Properties":{"SourceContext":"Linedata.Foundation.Messaging.IdentityModel.TokenValidatorPipeline"}}
{"Timestamp":"2021-03-29T13:49:28.7346520+01:00","Level":"Warning","MessageTemplate":"No service credentials provider was configured; outgoing messages will not contain access tokens","Properties":{"SourceContext":"Linedata.Foundation.Messaging.IdentityModel.TokenProviderPipeline"}}
{"Timestamp":"2021-03-29T13:49:28.8845432+01:00","Level":"Information","MessageTemplate":"Starting service {name}...","Properties":{"name":"Command Receiver","SourceContext":"Linedata.Foundation.ServiceHosting.Microservice"}}
{"Timestamp":"2021-03-29T13:49:28.8943457+01:00","Level":"Information","MessageTemplate":"Opening command receiver server endpoint at {address}","Properties":{"address":"tcp://localhost:12333","SourceContext":"Linedata.Foundation.CommandReceiver.CommandReceiverService"}}
{"Timestamp":"2021-03-29T13:49:29.0633502+01:00","Level":"Information","MessageTemplate":"Command Receiver is listening at {address}","Properties":{"address":"tcp://localhost:12333","SourceContext":"Linedata.Foundation.CommandReceiver.CommandReceiverService"}}
{"Timestamp":"2021-03-29T13:49:29.0755921+01:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2021-03-29T13:49:29.0789883+01:00","Level":"Information","MessageTemplate":"Hosting environment: {envName}","Properties":{"envName":"Production","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2021-03-29T13:49:29.0792916+01:00","Level":"Information","MessageTemplate":"Content root path: {contentRoot}","Properties":{"contentRoot":"C:\\Users\\Etaieb\\Desktop\\Training\\MockOMS\\CommandReceiver\\bin\\Debug\\netcoreapp3.1","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2021-03-29T13:49:29.0866690+01:00","Level":"Information","MessageTemplate":"Application is shutting down...","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2021-03-29T13:49:34.0946028+01:00","Level":"Information","MessageTemplate":"Waiting for the host to be disposed. Ensure all 'IHost' instances are wrapped in 'using' blocks.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2021-03-29T15:31:03.6666402+01:00","Level":"Warning","MessageTemplate":"No token validator was configured; incoming message access tokens will not be validated","Properties":{"SourceContext":"Linedata.Foundation.Messaging.IdentityModel.TokenValidatorPipeline"}}
{"Timestamp":"2021-03-29T15:31:03.6736540+01:00","Level":"Warning","MessageTemplate":"No identity context accessor was configured; no identity context will be set","Properties":{"SourceContext":"Linedata.Foundation.Messaging.IdentityModel.TokenValidatorPipeline"}}
{"Timestamp":"2021-03-29T15:31:03.6739166+01:00","Level":"Warning","MessageTemplate":"No service credentials provider was configured; outgoing messages will not contain access tokens","Properties":{"SourceContext":"Linedata.Foundation.Messaging.IdentityModel.TokenProviderPipeline"}}
{"Timestamp":"2021-03-29T15:31:03.7747929+01:00","Level":"Information","MessageTemplate":"Starting service {name}...","Properties":{"name":"Command Receiver","SourceContext":"Linedata.Foundation.ServiceHosting.Microservice"}}
{"Timestamp":"2021-03-29T15:31:03.7826475+01:00","Level":"Information","MessageTemplate":"Opening command receiver server endpoint at {address}","Properties":{"address":"tcp://localhost:12333","SourceContext":"Linedata.Foundation.CommandReceiver.CommandReceiverService"}}
{"Timestamp":"2021-03-29T15:31:03.9018871+01:00","Level":"Information","MessageTemplate":"Command Receiver is listening at {address}","Properties":{"address":"tcp://localhost:12333","SourceContext":"Linedata.Foundation.CommandReceiver.CommandReceiverService"}}
{"Timestamp":"2021-03-29T15:31:03.9123222+01:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2021-03-29T15:31:03.9165165+01:00","Level":"Information","MessageTemplate":"Hosting environment: {envName}","Properties":{"envName":"Production","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2021-03-29T15:31:03.9168424+01:00","Level":"Information","MessageTemplate":"Content root path: {contentRoot}","Properties":{"contentRoot":"C:\\Users\\Etaieb\\Desktop\\Training\\MockOMS\\CommandReceiver\\bin\\Debug\\netcoreapp3.1","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2021-03-29T15:31:03.9211834+01:00","Level":"Information","MessageTemplate":"Application is shutting down...","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2021-03-29T15:31:04.1694980+01:00","Level":"Information","MessageTemplate":"Received connection from {address}","Properties":{"address":"14f065715ba8446199b9f083316eac1a","SourceContext":"Linedata.Foundation.CommandReceiver.CommandReceiverService"}}
{"Timestamp":"2021-03-29T15:31:04.2672680+01:00","Level":"Warning","MessageTemplate":"Error deserializing message type {type}","Exception":"Newtonsoft.Json.JsonSerializationException: Unable to find a constructor to use for type Accounts.Domain.Commands.Public.CreateAccount. A class should either have a default constructor, one constructor with arguments or a constructor marked with the JsonConstructor attribute. Path 'Amount', line 1, position 10.\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(JsonReader reader, JsonObjectContract objectContract, JsonProperty containerMember, JsonProperty containerProperty, String id, Boolean& createdFromNonDefaultCreator)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonSerializer.Deserialize(TextReader reader, Type objectType)\r\n   at Linedata.Foundation.Messaging.Serialization.Json.JsonNetSerializer.Deserialize(Type type, Stream stream)","Properties":{"type":"CreateAccount","SourceContext":"Linedata.Foundation.Messaging.Serialization.Json.JsonNetSerializer"}}
{"Timestamp":"2021-03-29T15:31:04.2697501+01:00","Level":"Warning","MessageTemplate":"Error processing inbound message","Exception":"Linedata.Foundation.Messaging.SerializationException: Error deserializing message type CreateAccount\r\n ---> Newtonsoft.Json.JsonSerializationException: Unable to find a constructor to use for type Accounts.Domain.Commands.Public.CreateAccount. A class should either have a default constructor, one constructor with arguments or a constructor marked with the JsonConstructor attribute. Path 'Amount', line 1, position 10.\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(JsonReader reader, JsonObjectContract objectContract, JsonProperty containerMember, JsonProperty containerProperty, String id, Boolean& createdFromNonDefaultCreator)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonSerializer.Deserialize(TextReader reader, Type objectType)\r\n   at Linedata.Foundation.Messaging.Serialization.Json.JsonNetSerializer.Deserialize(Type type, Stream stream)\r\n   --- End of inner exception stack trace ---\r\n   at Linedata.Foundation.Messaging.Serialization.Json.JsonNetSerializer.Deserialize(Type type, Stream stream)\r\n   at Linedata.Foundation.Messaging.Serialization.MessageSerializerExtensions.Deserialize(IMessageSerializer serializer, Type type, Byte[] data)\r\n   at Linedata.Foundation.Messaging.Channels.DuplexChannel.ConvertMessage(Envelope envelope)\r\n   at Linedata.Foundation.Messaging.Channels.DuplexChannel.OnReceiveAsync(IDuplexSocket socket, Envelope envelope)\r\n   at Linedata.Foundation.Messaging.Dispatchers.Queued.QueuedDuplexChannelDispatcher.ProcessInboundAsync(CancellationToken cancellationToken)","Properties":{"SourceContext":"Linedata.Foundation.Messaging.Dispatchers.Queued.QueuedDuplexChannelDispatcher"}}
{"Timestamp":"2021-03-29T15:31:08.9283324+01:00","Level":"Information","MessageTemplate":"Waiting for the host to be disposed. Ensure all 'IHost' instances are wrapped in 'using' blocks.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2021-03-29T15:32:11.7778890+01:00","Level":"Warning","MessageTemplate":"No token validator was configured; incoming message access tokens will not be validated","Properties":{"SourceContext":"Linedata.Foundation.Messaging.IdentityModel.TokenValidatorPipeline"}}
{"Timestamp":"2021-03-29T15:32:11.7850958+01:00","Level":"Warning","MessageTemplate":"No identity context accessor was configured; no identity context will be set","Properties":{"SourceContext":"Linedata.Foundation.Messaging.IdentityModel.TokenValidatorPipeline"}}
{"Timestamp":"2021-03-29T15:32:11.7853724+01:00","Level":"Warning","MessageTemplate":"No service credentials provider was configured; outgoing messages will not contain access tokens","Properties":{"SourceContext":"Linedata.Foundation.Messaging.IdentityModel.TokenProviderPipeline"}}
{"Timestamp":"2021-03-29T15:32:11.9411061+01:00","Level":"Information","MessageTemplate":"Starting service {name}...","Properties":{"name":"Command Receiver","SourceContext":"Linedata.Foundation.ServiceHosting.Microservice"}}
{"Timestamp":"2021-03-29T15:32:11.9508231+01:00","Level":"Information","MessageTemplate":"Opening command receiver server endpoint at {address}","Properties":{"address":"tcp://localhost:12333","SourceContext":"Linedata.Foundation.CommandReceiver.CommandReceiverService"}}
{"Timestamp":"2021-03-29T15:32:12.1673027+01:00","Level":"Information","MessageTemplate":"Command Receiver is listening at {address}","Properties":{"address":"tcp://localhost:12333","SourceContext":"Linedata.Foundation.CommandReceiver.CommandReceiverService"}}
{"Timestamp":"2021-03-29T15:32:12.1816627+01:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2021-03-29T15:32:12.1858746+01:00","Level":"Information","MessageTemplate":"Hosting environment: {envName}","Properties":{"envName":"Production","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2021-03-29T15:32:12.1861586+01:00","Level":"Information","MessageTemplate":"Content root path: {contentRoot}","Properties":{"contentRoot":"C:\\Users\\Etaieb\\Desktop\\Training\\MockOMS\\CommandReceiver\\bin\\Debug\\netcoreapp3.1","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2021-03-29T15:32:12.1920624+01:00","Level":"Information","MessageTemplate":"Application is shutting down...","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2021-03-29T15:32:17.1446625+01:00","Level":"Information","MessageTemplate":"Received connection from {address}","Properties":{"address":"866c4a9be33840a8a571022aef79c536","SourceContext":"Linedata.Foundation.CommandReceiver.CommandReceiverService"}}
{"Timestamp":"2021-03-29T15:32:17.1972931+01:00","Level":"Information","MessageTemplate":"Waiting for the host to be disposed. Ensure all 'IHost' instances are wrapped in 'using' blocks.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2021-03-29T15:32:17.2510673+01:00","Level":"Warning","MessageTemplate":"Error deserializing message type {type}","Exception":"Newtonsoft.Json.JsonSerializationException: Unable to find a constructor to use for type Accounts.Domain.Commands.Public.CreateAccount. A class should either have a default constructor, one constructor with arguments or a constructor marked with the JsonConstructor attribute. Path 'Amount', line 1, position 10.\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(JsonReader reader, JsonObjectContract objectContract, JsonProperty containerMember, JsonProperty containerProperty, String id, Boolean& createdFromNonDefaultCreator)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonSerializer.Deserialize(TextReader reader, Type objectType)\r\n   at Linedata.Foundation.Messaging.Serialization.Json.JsonNetSerializer.Deserialize(Type type, Stream stream)","Properties":{"type":"CreateAccount","SourceContext":"Linedata.Foundation.Messaging.Serialization.Json.JsonNetSerializer"}}
{"Timestamp":"2021-03-29T15:32:17.2592061+01:00","Level":"Warning","MessageTemplate":"Error processing inbound message","Exception":"Linedata.Foundation.Messaging.SerializationException: Error deserializing message type CreateAccount\r\n ---> Newtonsoft.Json.JsonSerializationException: Unable to find a constructor to use for type Accounts.Domain.Commands.Public.CreateAccount. A class should either have a default constructor, one constructor with arguments or a constructor marked with the JsonConstructor attribute. Path 'Amount', line 1, position 10.\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(JsonReader reader, JsonObjectContract objectContract, JsonProperty containerMember, JsonProperty containerProperty, String id, Boolean& createdFromNonDefaultCreator)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)\r\n   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)\r\n   at Newtonsoft.Json.JsonSerializer.Deserialize(TextReader reader, Type objectType)\r\n   at Linedata.Foundation.Messaging.Serialization.Json.JsonNetSerializer.Deserialize(Type type, Stream stream)\r\n   --- End of inner exception stack trace ---\r\n   at Linedata.Foundation.Messaging.Serialization.Json.JsonNetSerializer.Deserialize(Type type, Stream stream)\r\n   at Linedata.Foundation.Messaging.Serialization.MessageSerializerExtensions.Deserialize(IMessageSerializer serializer, Type type, Byte[] data)\r\n   at Linedata.Foundation.Messaging.Channels.DuplexChannel.ConvertMessage(Envelope envelope)\r\n   at Linedata.Foundation.Messaging.Channels.DuplexChannel.OnReceiveAsync(IDuplexSocket socket, Envelope envelope)\r\n   at Linedata.Foundation.Messaging.Dispatchers.Queued.QueuedDuplexChannelDispatcher.ProcessInboundAsync(CancellationToken cancellationToken)","Properties":{"SourceContext":"Linedata.Foundation.Messaging.Dispatchers.Queued.QueuedDuplexChannelDispatcher"}}
